大数求余解法：
思路：将结果sum直接用%取余。
代码：sum = sum % a；

条件与问题：该方法需保证sum在int32或者在int64的取值范围内，如果越界，则sum已经是一个错误的数，求出来的余数也是一个错误的余数。

解决方案： 循环求余 、 快速幂求余 ，其中后者的时间复杂度更低。

循环求余：
思路：通过for循环，每次乘以下一个数之后对结果先取余，然后再对下一个数进行相乘。
代码：for(int i=0; i<count; i++){
	result = result * nextNum % p;
          }

快速幂求余:
思路：当相乘的次数为奇数时，先将结果乘以被乘数，然后取余（相当于多出来的那一次已经被乘入结果内了），然后再对被乘数取平方，然后再对平方后的被乘数取余。每完成一次时，需要相乘的次数减半，直到为0。
代码：for（int i=count; i>0; i/=2）{
	if(i%2==1){
	       result = result * x % p;
	}
	x = x * x % p;
          }
